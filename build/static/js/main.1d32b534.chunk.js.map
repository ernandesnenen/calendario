{"version":3,"sources":["components/months_calendar.jsx","components/year_calendar.jsx","components/day.jsx","components/day_months_calendar.jsx","App.js","index.js"],"names":["Months_calendar","date_month","add_month","sub_month","className","onClick","Year_calendar","date_year","add_year","sub_year","selectDays","Day","children","td","useRef","useEffect","current","ref","innerText","indexOf","push","splice","console","log","Days_month","days_month_year","date_day","dias","map","day","getDate","firstDayMonth","getDay","setDate","ultimoDiadoMes","lastDayOfMonth","diasDoMes","showLines","length","x","y","celulas","linhas","item","index","id","b","App","useState","Date","date","getYear","year","setYear_c","getMonth","month","setMonth_c","days","setDays","eachDayOfInterval","start","startOfMonth","end","setYear","setMonth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d32b534.chunk.js","sourcesContent":["\r\nimport {FiChevronLeft, FiChevronRight} from 'react-icons/fi'\r\nimport './month.css'\r\nconst Months_calendar = ({date_month, add_month, sub_month}) => {\r\n\r\n  const meses = ['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Desembro']  \r\n  \r\n    \r\n    return(\r\n        <div className='container_month'>\r\n          \r\n            <button onClick={sub_month}>\r\n            {date_month >=1 &&\r\n                <FiChevronLeft />}\r\n            </button>\r\n          \r\n            <div className='mes'>\r\n                {meses[date_month]}\r\n            </div>\r\n         \r\n\r\n            <button onClick={add_month}>\r\n               \r\n                <FiChevronRight /> \r\n            </button>\r\n         \r\n        </div>\r\n    )\r\n\r\n}\r\nexport {Months_calendar}","\r\nimport {FiChevronLeft, FiChevronRight} from 'react-icons/fi'\r\n\r\nimport './year.css'\r\nconst Year_calendar = ({date_year,add_year,sub_year}) => {   \r\n    \r\n    return(\r\n        <div className='container_year'>\r\n            <button onClick={sub_year}>\r\n            <FiChevronLeft />\r\n            </button>\r\n            <div className='ano'>\r\n            {date_year}\r\n            </div>\r\n            <button onClick={add_year}>\r\n            <FiChevronRight />\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport {Year_calendar}","import { useEffect, useRef } from \"react\"\r\n\r\nlet selectDays = []\r\nexport const Day = ({children}) =>{\r\n    const td = useRef(null)\r\n\r\n    useEffect(()=>{\r\n           if(td.current.className){\r\n            td.current.className = 'onSelect'\r\n           }\r\n\r\n    })   \r\n    function handleClick() {  \r\n       \r\n        if(td.current.innerText === ''){\r\n            \r\n        }else{\r\n\r\n            td.current.className !== 'inSelect' ? td.current.className  = 'inSelect': td.current.className  = 'onSelect'\r\n            if(selectDays.indexOf(td.current.innerText) === -1){\r\n                selectDays.push(td.current.innerText)\r\n            }else{\r\n                selectDays.splice(selectDays.indexOf(td.current.innerText), 1)\r\n             }\r\n\r\n            }\r\n           console.log(selectDays)\r\n       }\r\n    return (\r\n        <td  ref={td} onClick={handleClick}> {children }</td>\r\n\r\n    )\r\n }\r\n","\r\n\r\nimport { setDate, getDay, lastDayOfMonth} from 'date-fns'\r\nimport './day.css'\r\nimport { Day } from './day'\r\n\r\n\r\nconst Days_month = ({days_month_year, date_day}) => {\r\n \r\nlet daySelect = [ 2, 20]\r\n\r\n  const dias = days_month_year.map(day=> day.getDate()) \r\n  let firstDayMonth= getDay(setDate(date_day, 1))\r\n  //isso traz a data com o ultimo dia do mês\r\n  let lastDayMonth = lastDayOfMonth(date_day)\r\n\r\n  // isso traz o ultimo dia do mes 30 31 29\r\n  let ultimoDiadoMes =lastDayMonth.getDate()\r\n\r\n// isso forma o array com os dias do mes\r\nlet diasDoMes=[]\r\nlet showLines = ((dias.length + firstDayMonth) % 7 === 0 ) ? dias.length + firstDayMonth : 7 - (dias.length + firstDayMonth) % 7 + dias.length + firstDayMonth ;\r\n\r\nfor(let x = 0;x<showLines;x++){\r\n    let y = 0\r\nif(x< firstDayMonth){\r\n    diasDoMes.push('')\r\n}else if(x>=(ultimoDiadoMes+firstDayMonth)){    \r\n    diasDoMes.push('')\r\n}else{\r\ny= x-firstDayMonth\r\ndiasDoMes.push(dias[y])\r\n}\r\n}\r\n\r\nlet celulas =[]\r\nlet linhas =[]\r\n// criar as tds ou celulas da tabela\r\nconsole.log(diasDoMes)\r\ndiasDoMes.map((item, index )=> {\r\n    \r\n    // if(item == 2){\r\n    //     celulas.push(<Day id={index} key={index}  >{item}</Day>)\r\n\r\n    // }\r\n\r\n     celulas.push(<Day id={index} key={index}  >{item}</Day>)\r\n    })\r\n    \r\n      \r\n// criar as trs ou linhas da tabela\r\nfor(let b= 0;b<6;b++){\r\n   linhas[b]=(<tr key={b}>{celulas.splice(0,7)}</tr>)\r\n}  \r\n    \r\n    return(\r\n        <div className='container_days'>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Dom</th>\r\n                    <th>Seg</th>\r\n                    <th>Ter</th>\r\n                    <th>Qua</th>\r\n                    <th>Qui</th>\r\n                    <th>Sex</th>\r\n                    <th>Sab</th>\r\n                </tr>           \r\n            </thead>\r\n            <tbody >\r\n                {linhas}\r\n            </tbody>\r\n            \r\n        </table>\r\n        </div>\r\n          ) \r\n        \r\n}\r\nexport {Days_month}","import {  useEffect,  useState } from 'react';\r\nimport { Months_calendar } from './components/months_calendar';\r\nimport { Year_calendar } from './components/year_calendar';\r\nimport { getMonth, getYear, lastDayOfMonth, startOfMonth, setMonth, setYear, eachDayOfInterval} from 'date-fns'\r\nimport { Days_month } from './components/day_months_calendar';\r\nimport './App.css'\r\n\r\n\r\nfunction App() {\r\n   let [date, setDate ]= useState(new Date())\r\n   let [year, setYear_c] = useState(getYear(date))   \r\n   let [month, setMonth_c] = useState(getMonth(date))\r\n   let [days, setDays] =useState([])\r\n \r\n\r\n   \r\n   \r\n   \r\n   \r\n   useEffect(()=>{\r\n     setDays( eachDayOfInterval({\r\n       start: startOfMonth(date),\r\n       end: lastDayOfMonth(date)\r\n      }))\r\n       \r\n      \r\n      \r\n    },[month, year, date])  \r\n  \r\n\r\n// -------------------------------Month-------------------------------------\r\n   function add_month(){\r\n    if(month >= 11){\r\n      setYear_c(year + 1)\r\n      setMonth_c(0)\r\n      setDate( new Date(`01/01/${year+1}`) )\r\n    \r\n      \r\n      return\r\n            \r\n    }\r\n    setMonth_c(month+1)\r\n    setDate(setMonth(date, month+1)) \r\n    }\r\n\r\n   function sub_month(){        \r\n     setMonth_c(month-1)\r\n     setDate(setMonth(date, month-1))\r\n     \r\n   }\r\n// -----------------------------year-------------------------------------------\r\n   function add_year(){\r\n       setYear_c(year + 1)\r\n       setDate(setYear(date, year+1))  \r\n      }\r\n      function sub_year(){\r\n        setYear_c(year - 1)\r\n        setDate(setYear(date, year-1))  \r\n   }\r\n// -------------------------------------------------------------------------------\r\n\r\n \r\n  return (\r\n   <div className='rootdiv'>\r\n\r\n  \r\n    <div className='container_calendar'>\r\n      <div className='anomes'>       \r\n        <Year_calendar date_year={year} add_year={add_year} sub_year={sub_year} />\r\n        <Months_calendar date_month={month} add_month={add_month} sub_month={sub_month}  />       \r\n      </div> \r\n      <div className='days'>\r\n        <Days_month days_month_year={days} date_day={date}/>\r\n      </div>      \r\n    </div>\r\n    <div className='left'>\r\n\r\n    </div>\r\n    </div>\r\n     );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}